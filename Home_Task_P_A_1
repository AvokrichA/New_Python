Задание 2.
На складе лежат разные фрукты в разном количестве. Нужно написать функцию, которая на вход принимает любое количество названий фруктов и их количество, а возвращает общее количество фруктов на складе. Пример работы функции: total_fruits(banana=5, mango=7, apple=8) 20

def fruits(**kwargs):
    
    total_fruits = sum(kwargs.values())
    
    return f'total fruits: {total_fruits}'
print(fruits(banana=5, mango=7, apple=8))
Total fruits: 20
Задание 3.
Дан список с затратами на рекламу. Но в данных есть ошибки, некоторые затраты имеют отрицательную величину. Удалите такие значения из списка и посчитайте суммарные затраты [100, 125, -90, 345, 655, -1, 0, 200] Используйте list comprehensions

expenses(dataset)
def expenses(dataset: list):
    
    dataset_1 = []
    
    for i in dataset:
        if i > 0:
            dataset_1.append(i)
            
    print(dataset_1)
    print(f'Суммарные затраты: {sum(dataset_1)}')
​
dataset = [100, 125, -90, 345, 655, -1, 0, 200]
​
expenses(dataset)
[100, 125, 345, 655, 200]
Суммарные затраты: 1425
set
print([i for i in dataset if i > 0 ])
[100, 125, 345, 655, 200]
set
print(f'Суммарные затраты: {sum([i for i in dataset if i > 0 ])}')
Суммарные затраты: 1425
Задание 4.
Даны два списка. Дата покупки ['2021-09-14', '2021-12-15', '2021-09-08', '2021-12-05', '2021-10-09', '2021-09-30', '2021-12-22', '2021-11-29', '2021-12-24', '2021-11-26', '2021-10-27', '2021-12-18', '2021-11-09', '2021-11-23', '2021-09-27', '2021-10-02', '2021-12-27', '2021-09-20', '2021-12-13', '2021-11-01', '2021-11-09', '2021-12-06', '2021-12-08', '2021-10-09', '2021-10-31', '2021-09-30', '2021-11-09', '2021-12-13', '2021-10-26', '2021-12-09'] Суммы покупок по датам [1270, 8413, 9028, 3703, 5739, 4095, 295, 4944, 5723, 3701, 4471, 651, 7037, 4274, 6275, 4988, 6930, 2971, 6592, 2004, 2822, 519, 3406, 2732, 5015, 2008, 316, 6333, 5700, 2887]

4.1 Найдите, какая выручка у компании в ноябре
Используйте list comprehensions

purchase_amount
purchase_date = ['2021-09-14', '2021-12-15', '2021-09-08', '2021-12-05', '2021-10-09', '2021-09-30', '2021-12-22', '2021-11-29',
        '2021-12-24', '2021-11-26', '2021-10-27', '2021-12-18', '2021-11-09', '2021-11-23', '2021-09-27', '2021-10-02', 
        '2021-12-27', '2021-09-20', '2021-12-13', '2021-11-01', '2021-11-09', '2021-12-06', '2021-12-08', '2021-10-09', 
        '2021-10-31', '2021-09-30', '2021-11-09', '2021-12-13', '2021-10-26', '2021-12-09']
purchase_amount = [1270, 8413, 9028, 3703, 5739, 4095, 295, 4944, 5723, 3701, 4471, 651, 7037, 4274, 6275, 4988, 6930, 2971, 6592, 2004,
        2822, 519, 3406, 2732, 5015, 2008, 316, 6333, 5700, 2887]
dataset_1: list, dataset_2: list
def november(dataset_1: list, dataset_2: list) -> list:
    
    new_dataset = []
    
    for i in range(len(dataset_1)-1):
        if '-11-' in dataset_1[i]:
            new_dataset.append(dataset_2[i])
            
    return new_dataset
print(november(purchase_date, purchase_amount))
print(f'Сумма выручки за ноябрь: {sum(november(purchase_date, purchase_amount))}')
[4944, 3701, 7037, 4274, 2004, 2822, 316]
Сумма выручки за ноябрь: 25098
cost
print([purchase_amount[i] for i in range(0, len(purchase_date)-1) if "-11" in purchase_date[i]])
print(f'Profit: {sum([purchase_amount[i] for i in range(len(date)-1) if "-11" in purchase_date[i]])}')
[4944, 3701, 7037, 4274, 2004, 2822, 316]
Profit: 25098
4.2 Найдите выручку компании в зависимости от месяца
Для этого напишите функцию, которая на вход принимает список с датами и список с выручкой, а на выходе словарь, где ключи - это месяцы, а значения - это выручка. Используйте аннотирование типов.

def revenue(dataset_1: list, dataset_2: list) -> dict:
    
    revenue = {}
    
    for i in range(len(dataset_1)):
        
        if date[i].split('-')[1] in revenue.keys():
            revenue[purchase_date[i].split('-')[1]] += purchase_amount[i]
        else:
            revenue[purchase_date[i].split('-')[1]] = purchase_amount[i]
            
    return revenue
​
print(revenue(purchase_date, purchase_amount))
{'09': 25647, '12': 45452, '10': 28645, '11': 25098}
